apply plugin: 'com.android.library'

android {
    compileSdkVersion COMPILE_SDK_VERSION
    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
        if (isLoginModule.toBoolean()){
            buildConfigField "String", "DEFAULT_HOSTS_URL", project.model_login_url
        }else {
            buildConfigField "String", "DEFAULT_HOSTS_URL", project.default_hosts_url
        }
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JAVA_VERSION
        targetCompatibility JAVA_VERSION
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //    testImplementation 'junit:junit:4.12'

    //    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    //    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    api "com.android.support:design:${SUPPORT_VERSION}"
    api "com.android.support:cardview-v7:${SUPPORT_VERSION}"
    api "com.android.support:support-v4:${SUPPORT_VERSION}"
    api "com.android.support:multidex:${LIB_MULTIDEX}"
    api "com.android.support.constraint:constraint-layout:${constraint_layout}"
    api "com.google.android:flexbox:${flexbox}"

    //网络请求
    api "com.google.code.gson:gson:${LIB_GSON_VERSION}"
    api "io.reactivex.rxjava2:rxjava:${LIB_RXJAVA_VERSION}"
    api "io.reactivex.rxjava2:rxandroid:${LIB_RXANDROID_VERSION}"
    api "com.squareup.retrofit2:retrofit:${LIB_RETROFIT_VERSION}"
    api "com.squareup.retrofit2:converter-gson:${LIB_RETROFIT_VERSION}"
    api "com.squareup.retrofit2:adapter-rxjava2:${LIB_RETROFIT_VERSION}"
    api "com.squareup.okhttp3:logging-interceptor:${LIB_OKHTTP_VERSION}"

    //RxLifeCycle
    api "com.github.nekocode.rxlifecycle:rxlifecycle:${LIB_RXLIFECYCLE_VERSION}"
    api "com.github.nekocode.rxlifecycle:rxlifecycle-compact:${LIB_RXLIFECYCLE_VERSION}"

    //BaseRecyclerViewAdapter
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:${LIB_BRBAH}"

    //Glide
    api("com.github.bumptech.glide:glide:${LIB_GLIDE_VERSION}") {
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:${LIB_GLIDE_VERSION}"
    api "jp.wasabeef:glide-transformations:${LIB_GLIDE_TRANSFORMATIONS_VERSION}"

    //eventbus
    api "org.greenrobot:eventbus:${LIB_EVENTBUS_VERSION}"

    //日志打印工具
    api 'com.github.zhaokaiqiang.klog:library:1.6.0'

    // ViewModel and LiveData

    //    implementation "android.arch.lifecycle:extensions:1.1.1"

    //    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"

    //ARouter
    api "com.alibaba:arouter-api:${LIB_AROUTER_API}"
    annotationProcessor "com.alibaba:arouter-compiler:${LIB_AROUTER_COMPILER}"
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
}
